<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Shine Right Homepage</title>
    <link>https://YuChaoGithub.github.io/posts/</link>
    <description>Recent content in Posts on Shine Right Homepage</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Yu Chao (趙佑) © 2020</copyright>
    <lastBuildDate>Sat, 21 Nov 2020 16:57:32 +0800</lastBuildDate>
    
	<atom:link href="https://YuChaoGithub.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>My First CTF Experience</title>
      <link>https://YuChaoGithub.github.io/posts/my-first-ctf-experience/</link>
      <pubDate>Sat, 21 Nov 2020 16:57:32 +0800</pubDate>
      
      <guid>https://YuChaoGithub.github.io/posts/my-first-ctf-experience/</guid>
      <description>Just participated in my very first Capture the Flag (CTF) competition two weeks ago. I had never heard of CTF before I took the cybersecurity course this semester, and it didn’t interest me at first so I didn’t register for it until a friend of mine invited me to join his team. It turned out to be a fabulous experience.

Usually, CTF competitions can be classified into two types, namely, the “attack and defense” match where two teams battle by attacking and defending a server, and the “jeopardy” contest where multiple teams compete to solve tricky puzzles.</description>
    </item>
    
    <item>
      <title>Project: YARC - Cloning Reddit Using Go and Vue</title>
      <link>https://YuChaoGithub.github.io/posts/project-yarc-cloning-reddit-using-go-and-vue/</link>
      <pubDate>Fri, 10 Jul 2020 12:43:25 +0800</pubDate>
      
      <guid>https://YuChaoGithub.github.io/posts/project-yarc-cloning-reddit-using-go-and-vue/</guid>
      <description>I didn&amp;rsquo;t get an internship this summer. This wasn&amp;rsquo;t because of COVID-19 or failing interviews, I simply didn&amp;rsquo;t apply to any. I felt that since I would be working something like 9-to-5 for the next 20, 30, or 40 years after I graduate, why would I spend my last summer vacation on&amp;hellip;working? So, instead of going through the anxiety of internship searching, I designed a few side projects and started working on them.</description>
    </item>
    
    <item>
      <title>My Journey in Programming Languages</title>
      <link>https://YuChaoGithub.github.io/posts/my-journey-in-programming-languages/</link>
      <pubDate>Sat, 02 May 2020 00:17:49 +0800</pubDate>
      
      <guid>https://YuChaoGithub.github.io/posts/my-journey-in-programming-languages/</guid>
      <description>In this semester, I am taking a course called Principles of Programming Language. It introduced some interesting programming language concepts such as dynamic scoping, duck typing, functional programming, and logic programming. However, what I enjoyed most in the course is that I got a lot of chance to explore and compare drastically different languages. In a 13-week semester, we had to turn in assignments written in COBOL, C, Java, Python, Perl, Prolog, and ML.</description>
    </item>
    
    <item>
      <title>Proving NP-Completeness by Restriction</title>
      <link>https://YuChaoGithub.github.io/posts/prove-np-complete-by-restriction/</link>
      <pubDate>Sat, 06 Jul 2019 21:29:47 +0800</pubDate>
      
      <guid>https://YuChaoGithub.github.io/posts/prove-np-complete-by-restriction/</guid>
      <description>Proving NP-Completeness is a core topic in the studies of algorithms. For most of the algorithms textbooks, they show some complicated tricks which reduce a known NP-Complete problem to another problem, say Q, to prove that Q is NP-Complete. This works because if problem A reduces to problem B, then B is at least as difficult as A. And since A is NP-Complete, B is also NP-Complete.

However, many problem reduction methods are extremely subtle and often require some &amp;ldquo;divine instincts&amp;rdquo; to come up with in the first place.</description>
    </item>
    
    <item>
      <title>Music in Film Terminology</title>
      <link>https://YuChaoGithub.github.io/posts/music-in-film-terminology/</link>
      <pubDate>Sat, 22 Jun 2019 09:23:30 +0800</pubDate>
      
      <guid>https://YuChaoGithub.github.io/posts/music-in-film-terminology/</guid>
      <description>Just took an interesting gen-eds course Music in Film last semester. Though I publish mostly technical or game dev articles on this blog, I really enjoyed the materials in the course and I&amp;rsquo;d love to share the basics (that is, the terminology) of the course here. (Note we refer &amp;ldquo;music in film&amp;rdquo; as the score music of films rather than the sound effects.)
Tonality vs. Atonality Tonality is a principle which the music is composed to center around a tonic central.</description>
    </item>
    
    <item>
      <title>Andrew Ng Machine Learning Course Review and Brief Notes</title>
      <link>https://YuChaoGithub.github.io/posts/andrew-ng-machine-learning-course-review/</link>
      <pubDate>Sat, 15 Jun 2019 10:02:39 +0800</pubDate>
      
      <guid>https://YuChaoGithub.github.io/posts/andrew-ng-machine-learning-course-review/</guid>
      <description>Just completed the renowned Andrew Ng&amp;rsquo;s Machine Learning course (on Coursera) these couple of days. Since many people are curious about this course, I will do a quick write up on how I think about this course and what I actually learned.
About the Instructor Andrew Ng is the co-founder of Google Brain and Coursera, and an adjunct professor at Stanford University. He was also a former vice president and chief scientist at Baidu working on large scale artificial intelligence projects.</description>
    </item>
    
    <item>
      <title>Trying out Medium</title>
      <link>https://YuChaoGithub.github.io/posts/trying-out-medium/</link>
      <pubDate>Mon, 10 Jun 2019 16:39:00 +0800</pubDate>
      
      <guid>https://YuChaoGithub.github.io/posts/trying-out-medium/</guid>
      <description>Haven&amp;rsquo;t been writing articles for almost half a year because I got back to school this spring. It&amp;rsquo;s really difficult to handle both the course works and side projects (such as maintaining a blog) at the same time, and I&amp;rsquo;m starting to worry that I&amp;rsquo;ll have even less time writing after I graduate. The &amp;ldquo;harsh&amp;rdquo; reality and &amp;ldquo;tough&amp;rdquo; life often change our hobbies into more &amp;ldquo;entertainment&amp;rdquo; ones unlike writing or other creative activities.</description>
    </item>
    
    <item>
      <title>Knights Rubbish Released</title>
      <link>https://YuChaoGithub.github.io/posts/knights-rubbish-released/</link>
      <pubDate>Fri, 23 Nov 2018 11:40:19 +0800</pubDate>
      
      <guid>https://YuChaoGithub.github.io/posts/knights-rubbish-released/</guid>
      <description>My second game project Knights Rubbish has released!

Originally I was just doing some experiments with Godot Engine and trying to implement the bare bones of a platformer, but then the project grew larger and larger as I combined it with other mechanics I was testing. After a year and couple of months, Knights Rubbish was born!
Real Photos as Game Graphics One of the coolest features in Knights Rubbish is that most of its graphics are made with processed photos.</description>
    </item>
    
    <item>
      <title>Self-Publish a Graphic Novel With Amazon KDP</title>
      <link>https://YuChaoGithub.github.io/posts/self-publish-a-graphic-novel-with-amazon-kdp/</link>
      <pubDate>Sun, 23 Sep 2018 17:20:39 +0800</pubDate>
      
      <guid>https://YuChaoGithub.github.io/posts/self-publish-a-graphic-novel-with-amazon-kdp/</guid>
      <description>I just self-published my very first graphic novel Inter-dimensional Time recently, using Amazon&amp;rsquo;s KDP (Kindle Direct Publish) platform. In this article, I am going to share my experience with Amazon KDP, and briefly go through the process of self-publishing.
Introduction Amazon KDP is arguably the cheapest and most convenient self-publishing service out there. It requires no service fee and lets you publish your book in both eBook and paperback formats. The best part, as far as I&amp;rsquo;m concerned, is that the dimensions, paper material, cover art, and pricing are highly customizable.</description>
    </item>
    
    <item>
      <title>iOS Tuner App Using Audiokit</title>
      <link>https://YuChaoGithub.github.io/posts/ios-tuner-app-using-audiokit/</link>
      <pubDate>Wed, 29 Aug 2018 12:23:50 +0800</pubDate>
      
      <guid>https://YuChaoGithub.github.io/posts/ios-tuner-app-using-audiokit/</guid>
      <description>I made an iOS Tuner &amp;amp; Metronome App last couple of months due to boredom. Suffering from boredom again this month, I decided to write an article on how I implement it.

In this article, I will show:
 How to sample audio from the microphone using AudioKit. How to calculate the notes from raw frequencies (of the sampled audio).  
I will not delve into how I implement the views since the code is quite bulky and tedious.</description>
    </item>
    
    <item>
      <title>Stirling&#39;s Formula - Approximation of n!</title>
      <link>https://YuChaoGithub.github.io/posts/stirling-formula/</link>
      <pubDate>Mon, 30 Oct 2017 20:00:00 +0800</pubDate>
      
      <guid>https://YuChaoGithub.github.io/posts/stirling-formula/</guid>
      <description>I.Introduction: The Coin Tossing Problem Whenever you have difficulty deciding something, for example, whether to attend the lectures of a course or not, the most common thing to do in this scenario is to toss a coin and see whether the heads or tails of the coin is facing up when they land. Assume that the coin you toss is uniform, meaning that the chance of the heads to land facing up is equal to the chance of the tails to land facing up.</description>
    </item>
    
    <item>
      <title>Shineright Studio starts...again and again!</title>
      <link>https://YuChaoGithub.github.io/posts/shineright-studio-starts-again-and-again/</link>
      <pubDate>Sun, 29 Oct 2017 20:00:00 +0800</pubDate>
      
      <guid>https://YuChaoGithub.github.io/posts/shineright-studio-starts-again-and-again/</guid>
      <description>Hello world, again!

Well, I&amp;rsquo;ve been moving my blog around different platforms quite a bit this year. Within only 8 months I&amp;rsquo;ve switched from Google&amp;rsquo;s Blogger to a self hosted Ghost blog on an AWS server, and now, I moved all my articles on my AWS server to this new blog, using Hugo static page generator, hosted on GitHub.

The reason why I switched to Hugo on GitHub is quite simple.</description>
    </item>
    
    <item>
      <title>Customized 2D Following Camera in Godot</title>
      <link>https://YuChaoGithub.github.io/posts/customized-2d-following-camera-in-godot/</link>
      <pubDate>Sun, 15 Oct 2017 16:40:00 +0800</pubDate>
      
      <guid>https://YuChaoGithub.github.io/posts/customized-2d-following-camera-in-godot/</guid>
      <description>Two weeks ago, I wrote an article about some camera moving schemes used in Metal Slug 3. In this article, I will show you how to actually implement such a camera.

I will be using the open source Godot Engine with GDScript since I believe any programmer with could understand GDScript quite easily, so let&amp;rsquo;s get started.

First, let&amp;rsquo;s define some variables we&amp;rsquo;ll use later.
1 2 3 4 5 6 7 8 9 10  # Scroll the screen (aka.</description>
    </item>
    
    <item>
      <title>Camera Moving Scene Scrolling in Metal Slug 3</title>
      <link>https://YuChaoGithub.github.io/posts/camera-moving-scene-scrolling-in-metal-slug-3/</link>
      <pubDate>Sun, 01 Oct 2017 17:01:00 +0800</pubDate>
      
      <guid>https://YuChaoGithub.github.io/posts/camera-moving-scene-scrolling-in-metal-slug-3/</guid>
      <description>I&amp;rsquo;ve started to work on my first 2D side scrolling platformer recently. However, before diving into designing my own game, I did some quick research on various topics about 2D platformers. One of them is camera controlling (aka. scene scrolling).

I find some interesting camera controlling technique used in the Metal Slug series, so I would like to share my observations and analysis of how and when to apply those camera controlling schemes.</description>
    </item>
    
    <item>
      <title>My Experience in Google Summer of Code 2017</title>
      <link>https://YuChaoGithub.github.io/posts/my-experience-in-google-summer-of-code-2017/</link>
      <pubDate>Sun, 10 Sep 2017 15:10:00 +0800</pubDate>
      
      <guid>https://YuChaoGithub.github.io/posts/my-experience-in-google-summer-of-code-2017/</guid>
      <description>I&amp;rsquo;ve already posted an article about Google Summer of Code 2017. However, the post is mainly about the project itself. For this article, I&amp;rsquo;d like to share my experience and thoughts for the whole GSoC period.
 Google Summer of Code 2017 was an extremely exciting and rewarding experience for me. I was very lucky to be accepted by Systers (Anita Borg Institute) for working on the PowerUp-iOS project.</description>
    </item>
    
    <item>
      <title>GSoC 2017 Conclusion</title>
      <link>https://YuChaoGithub.github.io/posts/gsoc-2017-conclusion/</link>
      <pubDate>Mon, 04 Sep 2017 11:37:00 +0800</pubDate>
      
      <guid>https://YuChaoGithub.github.io/posts/gsoc-2017-conclusion/</guid>
      <description>(This is an overview and conclusion for my summer internship (Google Summer of Code 2017) in Systers on the PowerUp-iOS project. The original article is posted on systers&amp;rsquo; Blogger. Here is the Link.)
Overview PowerUp is an educational mobile game app aiming at providing adolescent girls with reproductive health knowledge, empowering them with better self esteem, and teaching them conflict resolution skills in social life.

It is a choose-your-own-adventure game which the players have to navigate an avatar to engage in conversations of different scenarios.</description>
    </item>
    
    <item>
      <title>Animate Nodes Using SKAction in iOS Sprite Kit</title>
      <link>https://YuChaoGithub.github.io/posts/animate-nodes-using-skaction-in-ios-sprite-kit/</link>
      <pubDate>Sun, 06 Aug 2017 22:35:00 +0800</pubDate>
      
      <guid>https://YuChaoGithub.github.io/posts/animate-nodes-using-skaction-in-ios-sprite-kit/</guid>
      <description>Apple&amp;rsquo;s Sprite Kit is a really well-designed and convenient framework for iOS game development. In this article, I will briefly introduce Sprite Kit Action (SKAction in short), which is the bread and butter for animating nodes in Sprite Kit.
The Basics In Sprite Kit, every node can run an SKAction by calling the run(_:) function. run(_:) takes an SKAction as its parameter, and will perform the action immediately after the call.</description>
    </item>
    
    <item>
      <title>A Brief Review of Godot Engine</title>
      <link>https://YuChaoGithub.github.io/posts/a-brief-review-of-godot/</link>
      <pubDate>Sun, 23 Jul 2017 15:11:00 +0800</pubDate>
      
      <guid>https://YuChaoGithub.github.io/posts/a-brief-review-of-godot/</guid>
      <description>After finishing 2 of my projects in Unity, I was planning to try out something different and hopefully, more suitable for me to use. I did a quick research on some modern cross platform game engines: Godot, Cocos2d-x, Atomic, Love2D, Phaser, and of course, Unreal. I finally decided to look more into Godot Engine. In this article, I will write briefly about the features, the special node-scene system, as well as the pros and cons of Godot Engine.</description>
    </item>
    
    <item>
      <title>Build &amp; Test Automation for Xcode Projects Using Travis CI</title>
      <link>https://YuChaoGithub.github.io/posts/build-test-automation-for-xcode-projects-using-travis-ci/</link>
      <pubDate>Sat, 08 Jul 2017 18:47:00 +0800</pubDate>
      
      <guid>https://YuChaoGithub.github.io/posts/build-test-automation-for-xcode-projects-using-travis-ci/</guid>
      <description>Testing your code is a vital process in app development, since it could reveal bugs and mistakes before the users actually use it. However, testing your app whenever you make a commit can be tedious and time-consuming. This is where Continuous Integration (CI) comes to rescue.
Continuous Integration Continuous Integration is the process of building and testing your app automatically, saving precious time for the developers. In this article, I will demonstrate how to integrate Travis CI to your XCode projects (to be specific, iOS/macOS/tvOS/watchOS projects) on GitHub.</description>
    </item>
    
    <item>
      <title>GSoC 2017 With Systers on PowerUp Project</title>
      <link>https://YuChaoGithub.github.io/posts/gsoc-2017-with-systers-on-powerup-project/</link>
      <pubDate>Sun, 21 May 2017 20:37:00 +0800</pubDate>
      
      <guid>https://YuChaoGithub.github.io/posts/gsoc-2017-with-systers-on-powerup-project/</guid>
      <description>I&amp;rsquo;ve always wanted to participate in Google Summer of Code (GSoC) someday. Fortunately, this year, I got selected by Systers, an Anita Borg Institute community for a mobile game project &amp;ndash; PowerUp. In this article, I&amp;rsquo;ll write about how I chose which project to contribute, how I wrote my proposal, and what is the PowerUp project about.
Selecting Organizations When selecting which organizations to contribute, I focus mostly on what am I capable of doing, what interests me the most, and which projects would enhance my portfolio for my dream career.</description>
    </item>
    
    <item>
      <title>The Art of Game Design - Book Review</title>
      <link>https://YuChaoGithub.github.io/posts/the-art-of-game-design-book-review/</link>
      <pubDate>Mon, 01 May 2017 12:37:09 +0800</pubDate>
      
      <guid>https://YuChaoGithub.github.io/posts/the-art-of-game-design-book-review/</guid>
      <description>Finally finished reading the famous &amp;ldquo;The Art of Game Design: A Book of Lenses&amp;rdquo; by Jesse Schell. Jesse Schell is a professor at CMU ETC (which happens to be my dream graduate school :D) and an experienced game designer. Throughout the book, he often explains some abstract concepts by his actual experience in game designing (especially from the game Pirates of the Caribbean: Battle for Buccaneer Gold and Toontown Online which he designed) and performance art (he was a juggler during his teenage years).</description>
    </item>
    
    <item>
      <title>2D Fireworks Effect with Unity Particle System</title>
      <link>https://YuChaoGithub.github.io/posts/2d-fireworks-effect-with-unity-particle-system/</link>
      <pubDate>Sun, 16 Apr 2017 18:43:00 +0800</pubDate>
      
      <guid>https://YuChaoGithub.github.io/posts/2d-fireworks-effect-with-unity-particle-system/</guid>
      <description>Using particle systems is a wonderful way to improve the juiciness as well as the aesthetics of your game.

When making my rhythm game Boots-Cuts, I used the particle system in Unity to display a little firework effect whenever a music note is hit on-beat.
In this article, I&amp;rsquo;ll demonstrate how to make such an effect.
Texture and Material First, we&amp;rsquo;ll have to import the the graphics which we would like the particle systems to emit (aka.</description>
    </item>
    
    <item>
      <title>Music Syncing in Rhythm Games</title>
      <link>https://YuChaoGithub.github.io/posts/music-syncing-in-rhythm-games/</link>
      <pubDate>Sun, 12 Mar 2017 23:12:00 +0800</pubDate>
      
      <guid>https://YuChaoGithub.github.io/posts/music-syncing-in-rhythm-games/</guid>
      <description>Recently, I&amp;rsquo;ve started my beatbox rhythm game project Boots-Cut using Unity. When prototyping the basic game mechanics, I found that it is quite tricky to sync the music notes with the music correctly. However, there are very little articles on the web concerning this subject. So, I will try to point out some important tips when developing a rhythm game (especially in Unity) in this article.

Among all, I found the following three points with most importance:</description>
    </item>
    
    <item>
      <title>Recording and Playing Audio in Unity</title>
      <link>https://YuChaoGithub.github.io/posts/recording-and-playing-audio-in-unity/</link>
      <pubDate>Sun, 05 Mar 2017 13:31:00 +0800</pubDate>
      
      <guid>https://YuChaoGithub.github.io/posts/recording-and-playing-audio-in-unity/</guid>
      <description>Just published my Recordable Launchpad app on the iOS App Store and Google Play! Actually, the project was created accidentally when I was testing out Unity In-App Purchase, Google Admob Unity SDK, the &amp;ldquo;Prepare iOS for Recording&amp;rdquo; checkbox, and Audio Latency.

Since integrating Unity In-App Purchase and Google Admob are rather straightforward, I would be writing mostly about (the more troublesome parts, which are)
 Serializing and Deserializing AudioClips Getting Rid of Audio Latency Prepare iOS for Recording and iPhoneSpeakerFix  in this article.</description>
    </item>
    
  </channel>
</rss>